# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: demo
prefect-version: 2.19.7

# build section allows you to manage and build docker images
build:
- prefect_docker.deployments.steps.build_docker_image:
    id: build_image
    requires: prefect-docker>=0.3.1
    image_name: 992382502495.dkr.ecr.us-east-1.amazonaws.com/prefect-ecr
    tag: demo-flow
    dockerfile: auto
    platform: linux/amd64
    
# push section allows you to manage if and how this project is uploaded to remote locations
push:
- prefect_docker.deployments.steps.push_docker_image:
    requires: prefect-docker>=0.3.1
    image_name: '{{ build_image.image_name }}'
    tag: '{{ build_image.tag }}'

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect.deployments.steps.set_working_directory:
    id: clone-step
    directory: /opt/prefect/deployments/
- prefect.deployments.steps.pip_install_requirements:
    directory: "{{ clone-step.directory }}/flows"
    requirements_file: requirements.txt 
    stream_output: True

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: get_system_name_deployment
  entrypoint: flows/get_system_name.py:get_system_name
  parameters: {}
  work_pool:
    name: entechlog-data-ecs
    work_queue_name: default
    job_variables:
      image: '{{ build_image.image }}'
  schedules: []
